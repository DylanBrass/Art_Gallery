// <auto-generated />
using System;
using Art_Gallery_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Art_Gallery_Project.Migrations
{
    [DbContext(typeof(Art_Gallery_ProjectContext))]
    partial class Art_Gallery_ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Art_Gallery_Project.Models.ArtWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArtistId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("CompletionDate")
                        .HasColumnType("date");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int[]>("Medium")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("PieceDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("ArtWork");
                });

            modelBuilder.Entity("Art_Gallery_Project.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("Art_Gallery_Project.Models.Exhibition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Exhibition");
                });

            modelBuilder.Entity("Art_Gallery_Project.Models.ExhibitionArtWorks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtWorkId")
                        .HasColumnType("integer");

                    b.Property<int>("ExhibitionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ArtWorkId");

                    b.HasIndex("ExhibitionId");

                    b.ToTable("ExhibitionArtWorks");
                });

            modelBuilder.Entity("Art_Gallery_Project.Models.ArtWork", b =>
                {
                    b.HasOne("Art_Gallery_Project.Models.Artist", null)
                        .WithMany("ArtWorks")
                        .HasForeignKey("ArtistId");
                });

            modelBuilder.Entity("Art_Gallery_Project.Models.ExhibitionArtWorks", b =>
                {
                    b.HasOne("Art_Gallery_Project.Models.ArtWork", "ArtWork")
                        .WithMany("ExhibitionArtWorksList")
                        .HasForeignKey("ArtWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Art_Gallery_Project.Models.Exhibition", "Exhibition")
                        .WithMany("ExhibitionArtWorksList")
                        .HasForeignKey("ExhibitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArtWork");

                    b.Navigation("Exhibition");
                });

            modelBuilder.Entity("Art_Gallery_Project.Models.ArtWork", b =>
                {
                    b.Navigation("ExhibitionArtWorksList");
                });

            modelBuilder.Entity("Art_Gallery_Project.Models.Artist", b =>
                {
                    b.Navigation("ArtWorks");
                });

            modelBuilder.Entity("Art_Gallery_Project.Models.Exhibition", b =>
                {
                    b.Navigation("ExhibitionArtWorksList");
                });
#pragma warning restore 612, 618
        }
    }
}
